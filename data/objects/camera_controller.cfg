
# Dialog controllers are generic objects designed to be used as triggers for scripts.
# Various usages include modifying:
#  - on_create to trigger something on the start of a level.
#  - on_triggered to trigger something when the player reaches a certain spot
{
id: "camera_controller",
zorder: 50,
always_active: true,
hidden_in_game: true,

editor_info: {
	category: "cat",
},

properties : {
  move_camera: " def(string dir) 
    switch(dir, 
      'up'   , [p[0]       , p[1] - hei],
      'down' , [p[0]       , p[1] + hei],
      'left' , [p[0] - wid, p[1]],
      'right', [p[0] + wid, p[1]],
    ) where p = camera_pos 
      where wid = level.camera_position[2]
      where hei = level.camera_position[3]",
  move_lock: " def(string dir) 
    switch(dir, 
      'up'   , [p[0] + wid/2       , p[1] - hei/2],
      'down' , [p[0] + wid/2       , p[1] + hei + hei/2],
      'left' , [p[0] - wid/2       , p[1] + hei/2],
      'right', [p[0] + wid + wid/2, p[1] + hei/2],
    ) where p = camera_pos,
      where wid = level.camera_position[2]
      where hei = level.camera_position[3]",
},

on_editor_changed_variable: "fire_event('create')",

on_process: "
[
  if(level.in_editor, debug_rect(x,y,fake_width,max_height)),
  if (level.player.solid_mid_x < camera_pos[0],
    [
     set(level.lock_screen, move_lock('left')),
     set(camera_pos, move_camera('left')),
     set(level.camera_position, move_camera('left'))
    ]
  ),
  if (level.player.solid_mid_x > camera_pos[0] + level.camera_position[2],
    [
     set(level.lock_screen, move_lock('right')),
	 set(level.camera_position, move_camera('right')),
     set(camera_pos, move_camera('right')),
    ]
  ),
  if (level.player.solid_mid_y < level.camera_position[1],
    [
     set(level.lock_screen, move_lock('up')),
	 set(level.camera_position, move_camera('up')),
     set(camera_pos, move_camera('up')),
    ]
  ),
  if (level.player.solid_mid_y > level.camera_position[1] + level.camera_position[3],
    [
     set(level.lock_screen, move_lock('down')),
	 set(level.camera_position, move_camera('down')),
     set(camera_pos, move_camera('down')),
    ]
  ),
]",

on_create: "[set(level.lock_screen, [400,300]), set(camera_pos, [0,0])]",

on_end_anim: "animation('normal')",
animation: {
	id: "normal",
	image: "effects/particles.png",
	x: 86,
	y: 73,
	w: 28,
	h: 28,
	collide: [0,0,28,28],
	frames: 1,
	duration: 1000,
	},
}